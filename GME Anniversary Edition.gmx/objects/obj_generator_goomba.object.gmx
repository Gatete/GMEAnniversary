<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactivateparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Goomba Pipe Generator (Use only on horizontal pipes)

/*
**  This item uses creation code!
**
**  dir = Pick from below:
**      1: Right
**      -1: Left
*/

//Default variable:
dir = 1;

//Spawn 3 goombas
spawn = 0;

//Do not animate
image_speed = 0;
image_index = 0;

//Set the depth
depth = 10;

//Start spawning
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a goomba.

//Create goomba
with (instance_create(x,y,obj_goomba)) {

    hspeed = 0.5*sign(other.dir);
}

//Stop and snap into position
hspeed = 0;
x = xstart;

//Spawn another goomba.
if (spawn &lt; 2) {

    spawn++;
    alarm[0] = 60;
}
else {

    spawn = 0;
    alarm[0] = 180;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn a goomba.

//If Mario does not exists.
if (!instance_exists(obj_playerparent)) {

    //Hold event
    alarm[0] = 1;
    exit;
}

//Otherwise, if Mario does exist.
else {

    //If the level control is in silver coin mode, wait
    if (obj_levelcontrol.gswitchon) {
    
        //Hold event
        alarm[0] = 1;
        exit;
    }
    
    //Otherwise, spawn
    else {
    
        //If the goombas spawn to the right.
        if (dir == 1) {
        
            if (obj_playerparent.x &lt; x+32) {
            
                //Hold event
                alarm[0] = 1;
                exit;    
            }
            else {
            
                //If there's a solid in place
                if (place_meeting(x+16,y,obj_solid)) {
                
                    //Hold event
                    alarm[0] = 1;
                    exit;
                }
                
                //Otherwise, 
                else {
            
                    hspeed = 0.5;
                    alarm[1] = 32;
                }
            }
        }
        
        //Otherwise, if the goombas spawn to the left.
        else if (dir == -1) {
        
            if (obj_playerparent.x &gt; x-32) {
            
                //Hold event
                alarm[0] = 1;
                exit;
            }
            else {
            
                //If there's a solid in place
                if (place_meeting(x-16,y,obj_solid)) {
                
                    //Hold event
                    alarm[0] = 1;
                    exit;
                }
                
                //Otherwise, 
                else {
            
                    hspeed = -0.5;
                    alarm[1] = 32;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Goomba coming out of the pipe

draw_sprite_ext(sprite_index,-1,round(x),y,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
