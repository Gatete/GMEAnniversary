<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_big_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_wallrunmask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The player as it runs on wall and ceilings

//Destroy the spinner if it exists
with (obj_spinner) instance_destroy()

//Make Mario invisible, and disable his controls
with (obj_playerparent) {

    visible = 0;
    disablecontrol = 1;
}

//Use the run sprite
scr_global_run();

//Animate
image_speed = 0.425;

//Go up
direction = 90;

//Go fast
speed = 2.7;

//Rotational direction (Concave wall triangle corners)
//1: Counterclockwise, -1: Clockwise
direct = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare the player to stop wallrunning

if (instance_exists(obj_playerparent)) {

    //Make the player visible and enable control
    with (obj_playerparent) {
    
        visible = 1;
        disablecontrol = 0;
    }
    
    //If the player is running up, use the regular direction
    if (direction = 90)
        obj_playerparent.xscale = -direct;
        
    //Otherwise, reverse it's facing direction
    else
        obj_playerparent.xscale = direct;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle wall running logic

//Destroy self if the player does not exist
if (!instance_exists(obj_playerparent)) {

    instance_destroy();
    exit;
}

//Use the run sprite
scr_global_run();

//Snap the player to self
obj_playerparent.x = x;
obj_playerparent.y = y;
obj_playerparent.xspeed = 0;
obj_playerparent.yspeed = 0;

//If the jump key is pressed
if (keyboard_check_pressed(global.shiftkey)) {

    //Play 'Jump' sound
    audio_play_sound(snd_jump, 0, false)
    
    //If the player is running up, jump off the wall
    if (direction == 90) {
    
        obj_playerparent.yspeed = vspeed;
        obj_playerparent.xspeed = -3*direct;
    }
    
    //Otherwise, if the player is running down, jump off the wall
    else if (direction == 270) {
    
        obj_playerparent.yspeed = vspeed;
        obj_playerparent.xspeed = 3*direct;
    }
    
    //Otherwise, if the player is running on the ceiling, jump off
    else {
    
        obj_playerparent.xspeed = hspeed;
        obj_playerparent.yspeed = 3;
    }

    //Destroy
    instance_destroy()
}

//If Mario is running around clockwise
else if (direct == 1) {

    //Speed up if the run and right key is being pressed
    if ((keyboard_check(global.controlkey)) &amp;&amp; (keyboard_check(global.rightkey)))
        speed += 0.1;

    //Otherwise, slow down
    else
        speed -= 0.05;

    //If Mario is running up a wall on the right
    if (direction == 90) {

        //Destroy self if there is no solid to the right
        if (!place_meeting(x+8,y,obj_solid)) {
        
            obj_playerparent.xspeed = -vspeed;
            instance_destroy();
        }
    }

    //If Mario is running left on a ceiling
    else if (direction == 180) {

        //Destroy self if there is no solid above
        if (!place_meeting(x,y-8,obj_solid)) {
        
            obj_playerparent.xspeed = hspeed;
            instance_destroy()
        }

        //Check for an inverted right wall triangle
        var col = instance_position(x,y-24,obj_walltriangle_ir)
        if (col) 
        &amp;&amp; (x &lt; col.x+16) {
        
            x = col.x-16;
            y = col.y;
            direction = 90;
        }
    }

    //If Mario is running down a wall on the left
    else if (direction == 270) {

        //Destroy self if there is no solid to the left
        if (!place_meeting(x-8,y,obj_solid)) {
        
            obj_mario.yspeed = vspeed;
            instance_destroy();
        }

        //Check for an inverted left wall triangle
        var col = instance_position(x-24,y,obj_walltriangle_il);
        if (col) 
        &amp;&amp; (y &gt; col.y) {
        
            x = col.x;
            y = col.y+32;
            direction = 180;
        }
    }
}

//If Mario is running around counterclockwise
else if (direct == -1) {

    //Speed up if the run and left key is being pressed
    if ((keyboard_check(global.controlkey)) &amp;&amp; (keyboard_check(global.leftkey)))
        speed += 0.1

    //Otherwise, slow down
    else
        speed -= 0.05

    //If Mario is running up a wall on the left
    if (direction == 90) {

        //Destroy self if there is no solid to the left
        if (!place_meeting(x-8,y,obj_solid)) {
        
            obj_playerparent.xspeed = vspeed;
            instance_destroy();
        }
    }

    //If Mario is running right on a ceiling
    else if (direction == 0) {

        //Destroy self if there is no solid above
        if (!place_meeting(x,y-8,obj_solid)) {
        
            obj_playerparent.xspeed = hspeed;
            instance_destroy();
        }

        //Check for an inverted left wall triangle
        var col = instance_position(x,y-24,obj_walltriangle_il);
        if (col) 
        &amp;&amp; (x &gt; col.x) {
        
            x = col.x+32;
            y = col.y;
            direction = 90;
        }
    }

    //If Mario is running down a wall on the right
    else if (direction == 270) {

        //Destroy self if there is no solid to the right
        if (!place_meeting(x+8,y,obj_solid)) {
        
            obj_playerparent.yspeed = vspeed;
            instance_destroy();
        }

        //Check for an inverted right wall triangle
        var col = instance_position(x+24,y,obj_walltriangle_ir)
        if (col) 
        &amp;&amp; (y &gt; col.y) {
        
            x = col.x+16;
            y = col.y+32;
            direction = 0;
        }
    }
}

//Destroy self if Mario is too slow, or runs into a solid
if ((speed &lt; 1.6) || (place_meeting(x,y,obj_solid))) {

    obj_playerparent.xspeed = hspeed;
    obj_playerparent.yspeed = vspeed;
    instance_destroy();
}

//Stop Mario from running too fast
else if (speed &gt; 3)
    speed = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_il">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep this object running

//Make the player run from the ceiling to the left wall
if ((direct == 1) &amp;&amp; (direction == 180)) {

    x = other.x+16;
    y = other.y+16;
    direction = 270;
}

//Make the player run from the left wall to the ceiling
else if ((direct == -1) &amp;&amp; (direction == 90)) {

    x = other.x+16;
    y = other.y+16;
    direction = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_ir">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep this object running

//Make the player run from the right wall to the ceiling
if ((direct == 1) &amp;&amp; (direction == 90)) {

    x = other.x;
    y = other.y+16;
    direction = 180;
}

//Make the player run from the ceiling to the right wall
else if ((direct == -1) &amp;&amp; (direction == 0)) {

    x = other.x;
    y = other.y+16;
    direction = 270;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_l">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the player run from the right wall to the ground

if (((direct == 1) &amp;&amp; (direction == 270)) &amp;&amp; (y &gt; other.y)) {

    //Snap in position
    x = other.x+16;
    y = other.y;
    
    //Hereby horizontal speed
    obj_playerparent.xspeed = speed;
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_r">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the player run from the right wall to the ground

if (((direct == -1) &amp;&amp; (direction == 270)) &amp;&amp; (y &gt; other.y)) {

    //Snap in position
    x = other.x;
    y = other.y;
    
    //Hereby horizontal speed
    obj_playerparent.xspeed = -speed;
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the player

//Make sure the player exists
if (instance_exists(obj_playerparent)) {

    //Set shader
    pal_swap_set(player_palette_get(), obj_playerparent.isflashing);
    
    //Draw the player
    if (direct == 1) {
    
        if (direction == 90)
            draw_sprite_ext(sprite_index,image_index,round(x),round(y),1,1,90,c_white,obj_playerparent.image_alpha)
        else if (direction == 180)
            draw_sprite_ext(sprite_index,image_index,round(x),round(y),1,1,180,c_white,obj_playerparent.image_alpha)
        else
            draw_sprite_ext(sprite_index,image_index,round(x),round(y),1,1,270,c_white,obj_playerparent.image_alpha)    
    }
    else if (direct == -1) {

        if (direction == 90)
            draw_sprite_ext(sprite_index,image_index,round(x),round(y),-1,1,270,c_white,obj_playerparent.image_alpha)
        else if (direction == 0)
            draw_sprite_ext(sprite_index,image_index,round(x),round(y),-1,1,180,c_white,obj_playerparent.image_alpha)
        else
            draw_sprite_ext(sprite_index,image_index,round(x),round(y),-1,1,90,c_white,obj_playerparent.image_alpha)    
    }
    
    //Reset shader
    pal_swap_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
