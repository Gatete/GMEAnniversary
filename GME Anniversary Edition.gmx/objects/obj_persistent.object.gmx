<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gatete Mario Engine: Anniversary Edition Persistent Object

/*  - IMPORTANT NOTE -
//
//  This variable has a persistency mode that can be enabled / disabled with the variable below.
//
//  If you keep this enabled some items will maintain it's current state when changing rooms.
//  
//  This variable will not affect the following items
//
//  -   Green Stars
//  -   3-Up Moons
//  -   Enemies
//  -   Every item that has the following parents set on it.
//
//      -   obj_carryparent
//      -   obj_holdparent
//      -   obj_pullparent
//
//  This is a very important variable, do not delete it.
*/ 

//Persistence mode
global.persistence = true;

//How the screen is fading
//0: From black, 1: To black
mode = 0;

//How much the screen is faded
done = 0;

//Screenshot of the game, if it exists
back = -1;

//Message to display to the screen
message = "";

//Declare all the global variables
scr_init_globals();

//Item that is being carried between rooms
global.carrieditem = noone;

//The sprite used by an item carried between rooms
global.carriedsprite = noone

//Whether Mario should hold/carry an object
global.shallihold = 0

//The level music
global.levelmusic = noone;

//Data structure for collected green stars
for (i=0; i&lt;99; i++;) { //Modify the second number with the number of levels your game will have.

    global.greenstar[i,0] = 0;
    global.greenstar[i,1] = 0;
    global.greenstar[i,2] = 0;
}

//Data structure for storing the state of the world map.
global.worldmap = ds_map_create(); 

//Set the epsilon value for floating point numbers
math_set_epsilon(0.00001)

//Disable application surface automatic drawing
application_surface_draw_enable(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
